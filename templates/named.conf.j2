/*
 Sample named.conf BIND DNS server 'named' configuration file
 for the Red Hat BIND distribution.

 See the BIND Administrator's Reference Manual (ARM) for details about the
 configuration located in /usr/share/doc/bind-{version}/Bv9ARM.html
*/

options
{
	// Put files that named is allowed to write in the data/ directory:
	directory 		"/var/named";		// "Working" directory
	dump-file 		"data/cache_dump.db";
        statistics-file 	"data/named_stats.txt";
        memstatistics-file 	"data/named_mem_stats.txt";


	/*
	  Specify listenning interfaces. You can use list of addresses (';' is
	  delimiter) or keywords "any"/"none"
	*/
	listen-on port 53	{ any; };
	//listen-on port 53	{ 127.0.0.1; };

	//listen-on-v6 port 53	{ any; };
	//listen-on-v6 port 53	{ ::1; };

	/*
	  Access restrictions

	  There are two important options:
	    allow-query { argument; };
	      - allow queries for authoritative data

	    allow-query-cache { argument; };
	      - allow queries for non-authoritative data (mostly cached data)

	  You can use address, network address or keywords "any"/"localhost"/"none" as argument
	  Examples:
	    allow-query { localhost; 10.0.0.1; 192.168.1.0/8; };
	    allow-query-cache { ::1; fe80::5c63:a8ff:fe2f:4526; 10.0.0.1; };
	*/

	allow-query		{ any; };
	allow-query-cache	{ any; };

	/* Enable/disable recursion - recursion yes/no;

	 - If you are building an AUTHORITATIVE DNS server, do NOT enable recursion.
	 - If you are building a RECURSIVE (caching) DNS server, you need to enable
	   recursion.
	 - If your recursive DNS server has a public IP address, you MUST enable access
	   control to limit queries to your legitimate users. Failing to do so will
	   cause your server to become part of large scale DNS amplification
	   attacks. Implementing BCP38 within your network would greatly
	   reduce such attack surface
	 */
	recursion no;

	/* DNSSEC related options. See information about keys ("Trusted keys", bellow) */

	/* Enable serving of DNSSEC related data - enable on both authoritative
 	   and recursive servers DNSSEC aware servers */
	dnssec-enable no;

	/* Enable DNSSEC validation on recursive servers */
	dnssec-validation no;

	/* In RHEL-7 we use /run/named instead of default /var/run/named
	   so we have to configure paths properly. */
	pid-file "/run/named/named.pid";
	session-keyfile "/run/named/session.key";

	managed-keys-directory "/var/named/dynamic";
};

logging
{
/*      If you want to enable debugging, eg. using the 'rndc trace' command,
 *      named will try to write the 'named.run' file in the $directory (/var/named).
 *      By default, SELinux policy does not allow named to modify the /var/named directory,
 *      so put the default debug log file in data/ :
 */
        channel default_debug {
                file "data/named.run";
                severity dynamic;
        };
};


        /* these are zones that contain definitions for all the localhost
         * names and addresses, as recommended in RFC1912 - these names should
	 * not leak to the other nameservers:
	 */
	include "/etc/named.rfc1912.zones";

	// These are your "authoritative" internal zones, and would probably
	// also be included in the "localhost_resolver" view above :

	/*
	  NOTE for dynamic DNS zones and secondary zones:

	  DO NOT USE SAME FILES IN MULTIPLE VIEWS!

	  If you are using views and DDNS/secondary zones it is strongly
	  recommended to read FAQ on ISC site (www.isc.org), section
	  "Configuration and Setup Questions", questions
	  "How do I share a dynamic zone between multiple views?" and
	  "How can I make a server a slave for both an internal and an external
	   view at the same time?"
	*/

	zone "l4rs.net" IN {
		type master;
		file "l4rs.net.db";
	};

  zone "168.192.in-addr.arpa" IN {
    type master;
    file "192.168.db";
  };

/*
	zone "ddns.l4rs.net" {
		type master;
		allow-update { key ddns_key; };
		file "dynamic/ddns.l4rs.net.db";
	};
};

key ddns_key
{
	algorithm hmac-md5;
	secret "use /usr/sbin/dnssec-keygen to generate TSIG keys";
};
*/
